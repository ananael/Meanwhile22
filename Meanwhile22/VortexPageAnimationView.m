//
// VortexPageAnimationView.m
// Generated by Core Animator version 1.3 on 8/21/16.
//
// DO NOT MODIFY THIS FILE. IT IS AUTO-GENERATED AND WILL BE OVERWRITTEN
//

#import "VortexPageAnimationView.h"

@implementation VortexPageAnimationView

#pragma mark - Life Cycle

- (instancetype)init
{
	return [self initWithFrame:CGRectMake(0,0,1536,2048)];
}

- (instancetype)initWithFrame:(CGRect)frame
{
	self = [super initWithFrame:frame];
	if (self)
	{
		[self setupHierarchy];
	}
	return self;
}

- (instancetype)initWithCoder:(NSCoder *)coder
{
	self = [super initWithCoder:coder];
	if (self)
	{
		[self setupHierarchy];
	}
	return self;
}

#pragma mark - Scaling

- (void)layoutSubviews
{
	[super layoutSubviews];

	UIView *scalingView = self.viewsByName[@"__scaling__"];
	float xScale = self.bounds.size.width / scalingView.bounds.size.width;
	float yScale = self.bounds.size.height / scalingView.bounds.size.height;
	switch (self.contentMode) {
		case UIViewContentModeScaleToFill:
			break;
		case UIViewContentModeScaleAspectFill:
		{
			float scale = MAX(xScale, yScale);
			xScale = scale;
			yScale = scale;
			break;
		}
		default:
		{
			float scale = MIN(xScale, yScale);
			xScale = scale;
			yScale = scale;
			break;
		}
	}
	scalingView.transform = CGAffineTransformMakeScale(xScale, yScale);
	scalingView.center = CGPointMake(CGRectGetMidX(self.bounds), CGRectGetMidY(self.bounds));
}

#pragma mark - Setup

- (void)setupHierarchy
{
	NSMutableDictionary *viewsByName = [NSMutableDictionary dictionary];
	NSBundle *bundle = [NSBundle bundleForClass:[self class]];

	UIView *__scaling__ = [UIView new];
	__scaling__.bounds = CGRectMake(0, 0, 1536, 2048);
	__scaling__.center = CGPointMake(768.0, 1024.0);
	__scaling__.layer.masksToBounds = YES;
	[self addSubview:__scaling__];
	viewsByName[@"__scaling__"] = __scaling__;

	UIImageView *vortexSpinPage = [UIImageView new];
	vortexSpinPage.bounds = CGRectMake(0, 0, 2153.0, 1632.0);
	UIImage *imgVortexSpinPage = [UIImage imageWithContentsOfFile:[bundle pathForResource:@"vortex spin page.png" ofType:nil]];
	if ( imgVortexSpinPage == nil ) { NSLog(@"** Warning: Could not create image from 'vortex spin page.png'. Please make sure that it is added to the project directly (not in a folder reference)."); }
	vortexSpinPage.image = imgVortexSpinPage;
	vortexSpinPage.contentMode = UIViewContentModeCenter;
	vortexSpinPage.layer.position = CGPointMake(768.000, 1024.000);
	vortexSpinPage.transform = CGAffineTransformMakeScale(1.00, 1.50);
	[__scaling__ addSubview:vortexSpinPage];
	viewsByName[@"vortex spin page"] = vortexSpinPage;

	self.viewsByName = viewsByName;
}

#pragma mark - vortex page animation

- (void)addVortexPageAnimation
{
	[self addVortexPageAnimationWithBeginTime:0 andFillMode:kCAFillModeBoth andRemoveOnCompletion:NO];
}

- (void)addVortexPageAnimationAndRemoveOnCompletion:(BOOL)removedOnCompletion
{
	[self addVortexPageAnimationWithBeginTime:0 andFillMode:removedOnCompletion ? kCAFillModeRemoved : kCAFillModeBoth andRemoveOnCompletion:removedOnCompletion];
}

- (void)addVortexPageAnimationWithBeginTime:(CFTimeInterval)beginTime andFillMode:(NSString *)fillMode andRemoveOnCompletion:(BOOL)removedOnCompletion
{
	CAMediaTimingFunction *linearTiming = [CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionLinear];

	CAKeyframeAnimation *vortexSpinPageRotationAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.rotation.z"];
	vortexSpinPageRotationAnimation.duration = 1.500;
	vortexSpinPageRotationAnimation.values = @[@(0.000), @(-6.266)];
	vortexSpinPageRotationAnimation.keyTimes = @[@(0.000), @(1.000)];
	vortexSpinPageRotationAnimation.timingFunctions = @[linearTiming];
	vortexSpinPageRotationAnimation.repeatCount = HUGE_VALF;
	vortexSpinPageRotationAnimation.beginTime = beginTime;
	vortexSpinPageRotationAnimation.fillMode = fillMode;
	vortexSpinPageRotationAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"vortex spin page"] layer] addAnimation:vortexSpinPageRotationAnimation forKey:@"vortex page animation_Rotation"];
}

- (void)removeVortexPageAnimation
{
	[[self.viewsByName[@"vortex spin page"] layer] removeAnimationForKey:@"vortex page animation_Rotation"];
}

- (void)removeAllAnimations
{
	for (UIView *view in self.viewsByName.allValues)
	{
		[view.layer removeAllAnimations];
	}
}

@end